#!/usr/bin/env python
# -*- coding: utf-8 -*-

import uuid

import argparse

from prioretizer.grasslib.configurator import Params
from prioretizer.grasslib.grasslib import GRASS

from prioretizer.defaults import DEFAULT_CONFIG_NAME


def parse_args():
    parser = argparse.ArgumentParser(description='Export layer from GIS database.')

    parser.add_argument(
        '--config',
        dest='config',
        action='store',
        default=DEFAULT_CONFIG_NAME,
        help='Config file (default: %s)' % (DEFAULT_CONFIG_NAME, )
    )
    parser.add_argument(
        '--input',
        dest='input',
        action='store',
        required=True,
        help='Input layer name (layer for export)'
    )
    parser.add_argument(
        '--output',
        dest='output',
        action='store',
        required=True,
        help='Output data file (*tiff or *gejson)'
    )
    parser.add_argument(
        '--overwrite',
        dest='overwrite',
        action='store_const',
        # choices=[True, False],
        const=True,
        default=False,
        help='Overwrite existing layer (True or False).'
    )
    args = parser.parse_args()

    return args


def name_is_vector_file(name):
    '''Return True if input filename is GeoJson'''
    return name.lower()[-7:] == 'geojson'


def name_is_raster_file(name):
    '''Return True if input filename is GeoTiff'''
    if name.lower()[-4:] == 'tiff':
        return True
    if name.lower()[-3:] == 'tif':
        return True
    return False


def main():
    args = parse_args()
    args = vars(args)

    output_file = args['output']
    if not (name_is_raster_file(output_file) or name_is_vector_file(output_file)):
        raise RuntimeError('Unknown file name type. Use *tiff or *geojson filename.')

    input = args['input']
    overwrite = args['overwrite']

    config = args['config']
    config_params = Params(config)

    grass_lib = config_params.grass_lib
    grass_exec = config_params.grass_exec

    location = config_params.location
    dbase = config_params.grassdata

    grs = GRASS(
        gisexec=grass_exec,
        gisbase=grass_lib,
        grassdata=dbase,
        location=location,
        init_loc=True
    )

    if name_is_vector_file(output_file):
        grs.export_to_geofile(input, output_file, type='vect', overwrite=overwrite)
    if name_is_raster_file(output_file):
        grs.export_to_geofile(input, output_file, type='rast', overwrite=overwrite)


if __name__ == '__main__':
    main()

